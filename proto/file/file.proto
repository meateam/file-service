syntax = "proto3";

package file;

service FileService {
  rpc GenerateKey(GenerateKeyRequest) returns (KeyResponse) {}
  rpc CreateUpload(CreateUploadRequest) returns (CreateUploadResponse) {}
  rpc CreateUpdate(CreateUploadRequest) returns (CreateUploadResponse) {}
  rpc UpdateUploadID(UpdateUploadIDRequest) returns (UpdateUploadIDResponse) {}
  rpc GetUploadByID(GetUploadByIDRequest) returns (GetUploadByIDResponse) {}
  rpc DeleteUploadByKey(DeleteUploadByKeyRequest) returns (DeleteUploadByKeyResponse) {}
  rpc DeleteUploadByID(DeleteUploadByIDRequest) returns (DeleteUploadByIDResponse) {}
  rpc GetFileByID(GetByFileByIDRequest) returns (File) {}
  rpc GetFileByKey(GetFileByKeyRequest) returns (File) {}
  rpc GetFilesByFolder(GetFilesByFolderRequest) returns (GetFilesByFolderResponse) {}
  rpc GetDescendantsByFolder(GetDescendantsByFolderRequest) returns (GetDescendantsByFolderResponse) {}
  rpc CreateFile(CreateFileRequest) returns (File) {}
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse) {}
  rpc IsAllowed(IsAllowedRequest) returns (IsAllowedResponse) {}
  rpc UpdateFiles(UpdateFilesRequest) returns (UpdateFilesResponse) {}
  rpc GetAncestors(GetAncestorsRequest) returns (GetAncestorsResponse) {}
  rpc GetDescendantsByID(GetDescendantsByIDRequest) returns (GetDescendantsByIDResponse) {}
  rpc DeleteFileByID(DeleteFileByIDRequest) returns (DeleteFileByIDResponse) {}
}

// Used for both upload and update
message CreateUploadRequest {
  string bucket = 1;
  string name = 2;
  string ownerID = 3;
  string parent = 4;
  int64 size = 5;
}

// Used for both upload and update
message CreateUploadResponse {
  string key = 1;
  string bucket = 2;
}

message GenerateKeyRequest {
}

message KeyResponse {
  string key = 1;
}

message UpdateUploadIDRequest {
  string key = 1;
  string uploadID = 2;
  string bucket = 3;
}

message UpdateUploadIDResponse {

}

message GetUploadByIDRequest {
  string uploadID = 1;
}

message GetUploadByIDResponse {
  string key = 1;
  string bucket = 2;
  string uploadID = 3;
  string name = 4;
  bool isUpdate = 5;
  string fileID = 6;
}

message DeleteUploadByKeyRequest {
  string key = 1;
  string bucket = 2;
}

message DeleteUploadByKeyResponse {

}

message DeleteUploadByIDRequest {
  string uploadID = 1;
}

message DeleteUploadByIDResponse {

}

message GetByFileByIDRequest {
  string id = 1;
}

message GetFileByKeyRequest {
  string key = 1;
}

message GetFilesByFolderRequest {
    string folderID = 1;
    string ownerID = 2;
    File queryFile = 3;
}

message GetFilesByFolderResponse {
  repeated File files = 1;
}

message GetDescendantsByFolderRequest {
  string folderID = 1;
  string ownerID = 2;
  File queryFile = 3;
}

message GetDescendantsByFolderResponse {
  repeated File files = 1;
}

message CreateFileRequest {
  string key = 1;
  string name = 2;
  int64 size = 3;
  string type = 4;
  string ownerID = 5;
  string bucket = 6;
  string parent = 7;
}

message DeleteFileRequest {
  string id = 1;
}

message DeletedFileObject {
    string id = 1;
    string key = 2;
    string bucket = 3;
}

message DeleteFileResponse {
  reserved 1;
  repeated DeletedFileObject files = 2;
}

message IsAllowedRequest {
  string fileID = 1;
  string userID = 2;
}

message IsAllowedResponse {
  bool allowed = 1;
}

message User {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string mail = 4;
}

message App {
  string id = 1;
  string name = 2;
}

message File {
  string id = 1;
  string key = 2;
  string name = 3;
  string type = 4;
  string description = 5;
  string ownerID = 6;
  int64 size = 7;
  oneof fileOrId {
      string parent = 8;
      File parentObject = 9;
  }
  string bucket = 10;
  int64 createdAt = 11;
  int64 updatedAt = 12;
  repeated File children = 13; 
  bool float = 14;
}

message UpdateFilesRequest {
  repeated string idList = 1;
  File partialFile = 2;
}

message UpdateFilesResponse {
  repeated FailedFile failedFiles = 1;
}

message FailedFile {
  string id = 1;
  string error = 2;
}

message GetAncestorsRequest {
  string id = 1;
}

message GetAncestorsResponse {
  repeated string ancestors = 1;
}

message GetDescendantsByIDRequest {
  string id = 1;
}

message GetDescendantsByIDResponse {
  message Descendant {
    File file = 1;
    File parent = 2;
  }

  repeated Descendant descendants = 1;
}

message DeleteFileByIDRequest {
  string id = 1;
}

message DeleteFileByIDResponse {
  File file = 1;
}